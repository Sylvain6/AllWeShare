security:
    role_hierarchy:
        ROLE_ADMIN:       ROLE_ADMIN
        ROLE_EDIT:        ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_SUPER_ADMIN, ROLE_EDIT]

    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            #form_login:
            #    check_path: app_front_security_login
            #    login_path: app_front_security_login
            #    csrf_token_generator: security.csrf.token_manager
            #    default_target_path: post_index
            #    provider: app_user_provider

            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator



            logout:
                path:   /logout
                target: /
                invalidate_session: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    #- { path: ^/login, roles: ROLE_ANONYMOUS }
    #- { path: ^/register, roles: ROLE_ANONYMOUS }
         - { path: ^/admin, roles: ROLE_ADMIN }
    #- { path: ^/, roles: ROLE_USER }